name: Deploy to Starfree Server

on:
  push:
    branches:
      - main  # mainブランチに push されたら実行

permissions:
  contents: write
  pull-requests: write  # Pull Request自動作成のために必要

jobs:
  fetch-ftp:
    runs-on: ubuntu-latest
    outputs:
      conflict: ${{ steps.diff_check.outputs.conflict }}

    steps:
      # (1) GitHubリポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # 必要に応じて履歴すべてを取得するなら fetch-depth: 0 にする
          fetch-depth: 0

      # (2) lftpインストール
      - name: Install lftp
        run: sudo apt-get install -y lftp

      # (3) FTPファイルをダウンロード (public_html の中身のみ)
      - name: Fetch latest files from FTP before deploying
        run: |
          lftp -c "
          open -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_HOST }};
          # 末尾に / を付けることで public_html の“中身”を ./ftp_latest にダウンロード
          mirror --verbose --only-newer --parallel=2 /kasukou2025.stars.ne.jp/public_html/ ./ftp_latest/
          bye"
        shell: bash

      # (4) 差分比較
      - name: Compare local and FTP files
        id: diff_check
        run: |
          # 公開フォルダ(public_html) と ftp_latest の差分を diff_log.txt に出力
          # 差分があってもエラー終了しないように '|| true' を付ける
          diff -rq ./ftp_latest/ ./public_html/ > diff_log.txt || true

          # diff_log.txt が空でなければ競合あり
          if [ -s diff_log.txt ]; then
            echo "conflict=true" >> $GITHUB_OUTPUT
          else
            echo "conflict=false" >> $GITHUB_OUTPUT
          fi

      # (5) 差分がある場合、ブランチを作成してプルリクを促す
      - name: Commit FTP changes to a new branch if conflicts exist
        id: commit_ftp
        if: steps.diff_check.outputs.conflict == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"

          # 現在日時でユニークなブランチ名を作る（例: ftp-conflict-20250328-153045）
          DATE_STR=$(date '+%Y%m%d-%H%M%S')
          BRANCH_NAME="ftp-conflict-${DATE_STR}"

          # ブランチ名を後のStepでも使えるよう outputs に書き出す
          echo "branch_name=$BRANCH_NAME" >> "$GITHUB_OUTPUT"

          # 新規ブランチを作成
          git checkout -b "$BRANCH_NAME"

          # FTPから取得したファイルを public_html にコピー (上書き)
          cp -r ./ftp_latest/* ./public_html/ || true

          # ステージング & コミット
          git add .
          git commit -m "FTPのファイルを取り込み (${DATE_STR})。手動で不要ファイルの整理・コンフリクトを解消してください。"

          # ブランチをpush
          git push origin "$BRANCH_NAME"

      # (6) プルリクエストを作成
      - name: Create Pull Request if conflicts exist
        if: steps.diff_check.outputs.conflict == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # (5) の Step から取得したブランチ名
          branch: ${{ steps.commit_ftp.outputs.branch_name }}
          base: main  # mainブランチに向けてPRを作成
          title: "FTPとの差分あり。不要ファイルを整理・マージしてください"
          body: |
            FTP上のファイルとGitHub上のpublic_htmlに差分が見つかりました。
            `diff_log.txt` を確認のうえ、不要ファイルがあれば整理しつつ
            コンフリクトを解消してマージをお願いします。

  # (7) 競合がない場合にデプロイを実行
  deploy:
    needs: fetch-ftp
    if: needs.fetch-ftp.outputs.conflict == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy via FTP (Only changed files)
        uses: SamKirkland/FTP-Deploy-Action@4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./public_html/
          server-dir: /kasukou2025.stars.ne.jp/public_html
          only-newer: true
